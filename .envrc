#!/usr/bin/env bash
# .envrc - direnv configuration for automatic virtual environment activation
# Install direnv: https://direnv.net/docs/installation.html
# Usage: Run 'direnv allow' in this directory to enable

# Get the absolute path of the project directory
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Remove any incorrect paths with hyphens from PATH
export PATH=$(echo "$PATH" | tr ':' '\n' | grep -v "qep-ai-fastapi-backend" | tr '\n' ':' | sed 's/:$//')

# Set up the virtual environment with the correct path
export VIRTUAL_ENV="${PROJECT_DIR}/.venv"
export PATH="${VIRTUAL_ENV}/bin:${PATH}"

# Clear command hash table to ensure new commands are found
hash -r 2>/dev/null || true

# Set virtual env prompt
export VIRTUAL_ENV_PROMPT="(qep_ai_fastapi_backend) "

# Set development environment variables
export ENVIRONMENT="${ENVIRONMENT:-development}"
export PYTHONPATH="${PROJECT_DIR}/src:${PYTHONPATH}"
export PYTHONDONTWRITEBYTECODE=1
export PYTHONUNBUFFERED=1

# Load .env file if it exists
if [ -f "${PROJECT_DIR}/.env" ]; then
    set -a
    source "${PROJECT_DIR}/.env"
    set +a
fi

# Development convenience aliases
alias run="uvicorn src.qep_ai_fastapi_backend.api.main:app --reload"
alias test="pytest"
alias lint="ruff check ."
alias format="ruff format ."
alias typecheck="mypy src/"
alias chat="qep_ai_fastapi_backend chat"
alias setup="qep_ai_fastapi_backend setup"
alias migrate="alembic upgrade head"
alias makemigration="alembic revision --autogenerate -m"

# Display environment info when entering directory
if [ -n "$DIRENV_IN_ENVRC" ]; then
    echo ""
    echo "🚀 QEP AI FastAPI Backend Development Environment"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo "✅ Virtual environment: $(basename $VIRTUAL_ENV)"
    echo "📁 Project: $(basename $PROJECT_DIR)"
    echo "🐍 Python: $(python --version 2>&1)"
    echo "⚡ Environment: $ENVIRONMENT"
    echo ""
    echo "Available aliases:"
    echo "  run          - Start the FastAPI development server"
    echo "  test         - Run the test suite"
    echo "  lint         - Check code with ruff"
    echo "  format       - Format code with ruff"
    echo "  typecheck    - Run mypy type checking"
    echo "  chat         - Test AI chat functionality"
    echo "  setup        - Run system setup checks"
    echo "  migrate      - Run database migrations"
    echo "  makemigration - Create a new migration"
    echo ""
fi 